import os
import json
import subprocess as sp

env = Environment(ENV=os.environ)

DEPENDENCIES = json.loads(sp.check_output(["python", "get_dependencies.py"]))
for script in DEPENDENCIES:
    deps = DEPENDENCIES[script]

    # special case: fall response plots
    if script == 'plots/fall_responses.py':
        params = [
            ('G', 'A'), ('G', 'B'), ('H', 'A'), ('H', 'B'), 
            ('GH', 'A'), ('GH', 'B'), ('I', 'A')
        ]

        for version, block in params:
            target = "figures/fall_responses_{}_{}".format(version, block)
            targets = ["{}.{}".format(target, ext) for ext in ["pdf", "png"]]
            env.Command(
                targets, [script] + deps['sources'],
                "python $SOURCE --to $TARGETS --version {} --block {}".format(
                    version, block))

    # special case: fall response plots
    elif script == 'plots/mass_accuracy_by_trial_with_model.py':
        params = [(True, True), (True, False), (False, True), (False, False)]

        for cf, fit in params:
            target = "figures/mass_accuracy_by_trial_with_model{}{}".format(
                '_nocf' if not cf else '',
                '_nofit' if not fit else '')
            targets = ["{}.{}".format(target, ext) for ext in ["pdf", "png"]]
            env.Command(
                targets, [script] + deps['sources'],
                "python $SOURCE --to $TARGETS {} {}".format(
                    '--no-counterfactual' if not cf else '',
                    '--not-fitted' if not fit else ''))

    # special case: model results
    elif script == 'plots/model_results.py':
        params = ['', 'percent_fell', 'more_than_one_fell', 'more_than_half_fell']
        for query in params:
            target = "figures/model_results{}".format('_' + query if query != '' else '')
            targets = ["{}.{}".format(target, ext) for ext in ["pdf", "png"]]
            env.Command(
                targets, [script] + deps['sources'],
                "python $SOURCE --to $TARGETS {}".format(
                    '--query={}'.format(query) if query != '' else ''))

    # special case: model learning results
    elif script == 'plots/model_learning_results.py':
        params = ['', 'ipe_percent_fell', 'ipe_more_than_one_fell', 'ipe_more_than_half_fell', 'empirical']
        for lh in params:
            target = "figures/model_learning_results{}".format('_' + lh if lh != '' else '')
            targets = ["{}.{}".format(target, ext) for ext in ["pdf", "png"]]
            env.Command(
                targets, [script] + deps['sources'],
                "python $SOURCE --to $TARGETS {}".format(
                    '--likelihood={}'.format(lh) if lh != '' else ''))

    # special case: num samples
    elif script == 'plots/num_samples.py':
        params = ['', 'percent_fell', 'more_than_one_fell', 'more_than_half_fell']
        for query in params:
            target = "figures/num_samples{}".format('_' + query if query != '' else '')
            targets = ["{}.{}".format(target, ext) for ext in ["pdf", "png"]]
            env.Command(
                targets, [script] + deps['sources'],
                "python $SOURCE --to $TARGETS {}".format(
                    '--query={}'.format(query) if query != '' else ''))

    # everything else
    else:
        env.Command(
            deps['targets'], [script] + deps['sources'], 
            "python $SOURCE --to $TARGETS")
